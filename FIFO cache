
import java.util.Arrays; 
 import java.util.Scanner; 
  
 class CacheFIFO { 
  
     private static int[] cache; 
     private static int nF, nextFrameIndex = 0; 
  
     public static void main(String[] args) { 
         Scanner scanner = new Scanner(System.in); 
         System.out.println("Enter number of page requests"); 
         int nR = scanner.nextInt(); 
  
         int[] pageNumbers = new int[nR]; 
         System.out.println("Enter page requests"); 
         for (int i = 0; i < nR; ++i) { 
             pageNumbers[i] = scanner.nextInt(); 
         } 
  
         System.out.println("Enter number of frames"); 
         nF = scanner.nextInt(); 
  
         cache = new int[nF]; 
         Arrays.fill(cache, -1); 
  
         int totalHits = 0, totalMisses = 0; 
  
         for (int i = 0; i < nR; ++i) { 
             int index = findPageNumber(pageNumbers[i]); 
             if (index != -1) { 
                 totalHits += 1; 
             } else { 
                 totalMisses += 1; 
                 cache[nextFrameIndex] = pageNumbers[i]; 
                 nextFrameIndex = (nextFrameIndex + 1) % nF; 
             } 
             printCache(); 
         } 
  
         System.out.println("Total Hits " + totalHits); 
         System.out.println("Total Misses " + totalMisses); 
         float hitRatio = ((float) totalHits) / (totalHits + totalMisses); 
         System.out.println("Hit Ratio " + hitRatio); 
  
     } 
  
     public static int findPageNumber(int pageNumber) { 
         for (int i = 0; i < nF; ++i) { 
             if (cache[i] == pageNumber) { 
                 return i; 
             } 
         } 
         return -1; 
     } 
  
     public static void printCache() { 
         System.out.print("Cache Content: "); 
         for (int i = 0; i < nF; ++i) { 
             System.out.print(cache[i] + " "); 
         } 
         System.out.println(); 
     } 
 } 
 
 Enter number of processes 
 5 
 Enter number of resources 
 3 
 Enter Allocation for each process and for each resource 
 0 1 0 
 2 0 0 
 3 0 2 
 2 1 1 
 0 0 2 
 Enter Maximum value for each process and for each resource 
 7 5 3 
 3 2 2 
 9 0 2 
 2 2 2 
 4 3 3 
 Enter availability for each resource 
 3 3 2 
 Is there any resource request? (Reply 1 for yes or 0 for no) 
 1 
 Enter Process Number 
 2 
 Enter Resource Requests 
 1 0 2 
 New Allocation 
 0 1 0 
 3 0 2 
 3 0 2 
 2 1 1 
 0 0 2 
 New Need 
 7 4 3 
 0 2 0 
 6 0 0 
 0 1 1 
 4 3 1 
 Process Number 2 
 Process Number 4 
 Process Number 1 
 Process Number 3 
 Process Number 5 
 System is in Safe State 
